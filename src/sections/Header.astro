---
import Moon from "@/components/icons/moon.astro";
import Sun from "@/components/icons/sun.astro";

const LINKS = [
  {
    href: "/#experiencia",
    name: "Experiencia",
  },
  {
    href: "/#proyectos",
    name: "Proyectos",
  },
  {
    href: "/#sobre-mi",
    name: "Sobre m√≠",
  },
];
---

<div
  class="h-12 w-full bg-gradient-to-r from-primary-100 to-primary-400 dark:bg-primary-950 dark:bg-none"
>
</div>
<header
  class={`fixed top-0 z-40 mt-2 flex w-full justify-center px-4 ${Astro.props.class}`}
>
  <nav
    class="flex flex-wrap items-center justify-center overflow-hidden rounded-full px-1 text-primary-600 dark:text-primary-600"
  >
    {
      LINKS.map((link) => (
        <a
          href={link.href}
          aria-label={link.name}
          class="my-1 whitespace-nowrap rounded-full px-3 py-1 text-sm font-medium transition-colors hover-active:bg-primary-900/5 dark:hover-active:bg-primary-50/5"
        >
          {link.name}
        </a>
      ))
    }

    <button
      id="theme-toggle"
      type="button"
      title="Cambiar tema"
      aria-label="Cambiar tema"
      class="inline-flex place-content-center px-3 py-1.5 transition focus-visible:outline-none hover:scale-125 hover-active:text-primary-900 dark:hover-active:text-primary-300"
    >
      <Sun class="size-6 transition-transform dark:-rotate-90 dark:opacity-0" />
      <Moon
        class="absolute size-6 rotate-90 opacity-0 transition-transform dark:rotate-0 dark:opacity-100"
      />
      <span class="sr-only"></span>
    </button>
  </nav>
</header>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  :is(.dark nav) {
    animation-name: nav-shadown-dark;
  }

  @keyframes nav-shadown {
    to {
      @apply bg-gradient-to-r from-primary-100 to-primary-400 shadow-lg ring-1 ring-primary-600;
    }
  }

  @keyframes nav-shadown-dark {
    to {
      @apply bg-primary-950 shadow-lg ring-1 ring-primary-600;
    }
  }
</style>

<script>
  const handleScrollSpy = () => {
    // ==== SCROLL SPY ====
    const links = document.querySelectorAll("header nav a");

    window.addEventListener("scroll", () => {
      let sectionVisible = false;

      links.forEach((a) => {
        const sectionElement: HTMLDivElement | null = document.querySelector(
          `section${a.getAttribute("href")?.substring(1)}`,
        );

        if (!sectionElement) return;

        if (
          window.scrollY >= sectionElement.offsetTop - 160 &&
          window.scrollY <
            sectionElement.offsetTop - 160 + sectionElement.offsetHeight
        ) {
          sectionVisible = true;
          links.forEach((link) => {
            link.classList.remove("text-primary-900", "dark:text-primary-300");
          });
          a.classList.add("text-primary-900", "dark:text-primary-300");
        }
      });

      if (!sectionVisible) {
        links.forEach((link) => {
          link.classList.remove("text-primary-900", "dark:text-primary-300");
        });
      }
    });
  };
  // On page load
  handleScrollSpy();
  // On change route
  document.addEventListener("astro:after-swap", handleScrollSpy);

  // ==== DARK MODE ====
  const setDefaultTheme = () => {
    const themeToggle = document.getElementById("theme-toggle");

    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }

    // On change system preferences theme
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", (e) => {
        if (e.matches) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      });

    themeToggle?.addEventListener("click", () => {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
    });
  };
  // On page load
  setDefaultTheme();
  // On change route
  document.addEventListener("astro:after-swap", setDefaultTheme);
</script>
